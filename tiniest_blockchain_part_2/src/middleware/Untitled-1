// Use this hook to manipulate incoming or outgoing data.
// For more information on hooks see: http://docs.feathersjs.com/api/hooks.html
const SHA256 = require('crypto-js/sha256');


class Block {
  constructor(index, timestamp, data, previousHash = '') {
    this.index = index;
    this.timestamp = timestamp;
    this.data = data;
    this.previousHash = previousHash;
    this.hash = this.calculateHash();
  }

  calculateHash() {
    return SHA256(this.index + this.previousHash + this.timestamp + JSON.stringify(this.data)).toString();
  }
}

class BlockChain {
  constructor() {
    this.chain = [this.createGenesisBlock()];
  }

  createGenesisBlock() {
    return new Block(0, '01/01/2017', 'Genesis Block', '0');
  }

  getLatestBlock() {
    return this.chain[this.chain.length - 1];
  }

  addBlock(newBlock) {
    newBlock.previousHash = this.getLatestBlock().hash;
    newBlock.hash = newBlock.calculateHash();
    this.chain.push(newBlock);
  }
}


// eslint-disable-next-line no-unused-vars
module.exports = function (options = {}) {
  return async context => {

    let senthilCoin = new BlockChain();
    console.log()
    senthilCoin.addBlock(new Block(context.data.userId, Date.now(), context.data.amount));
    // senthilCoin.addBlock(new Block(1, '12/07/2017', { amount: 10 }));
    console.log('app', senthilCoin);
    // return context;
  };
};
